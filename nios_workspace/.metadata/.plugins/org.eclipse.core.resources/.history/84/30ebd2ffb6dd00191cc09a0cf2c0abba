 /*
 *  Created on: 22/09/2019
 *      Author: kevin
 */

#include "main.h"
#include "pacemaker.c"
#include "timers.c"

//button interrupt function for ASense and VSense
void button_interrupt(void* context, alt_u32 id) {

	VSense = !(IORD_ALTERA_AVALON_PIO_DATA(BUTTONS_BASE) & 1<<0);
	ASense = !(IORD_ALTERA_AVALON_PIO_DATA(BUTTONS_BASE) & 1<<1);
	//clear edge capture register for next interrupt
	IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTONS_BASE, 0);
}

int main(){

	//reset signals
	reset();
	while(1){
		void* context = 0;
		//clear edge capture register
		IOWR_ALTERA_AVALON_PIO_EDGE_CAP(BUTTONS_BASE, 0);
		//enable interrupts for all buttons
		IOWR_ALTERA_AVALON_PIO_IRQ_MASK(BUTTONS_BASE, 0x7);
		//register the button interrupt ISR
		alt_irq_register(BUTTONS_IRQ, context, button_interrupt);
		//tick function
		tick();

		if (AEIStart)
			alt_alarm_start(&AEITimer, AEI_VALUE, AEITimerISR, context);
		if (AVIStart)
			alt_alarm_start(&AVITimer, AVI_VALUE, AVITimerISR, context);
		if (LRIStart)
			alt_alarm_start(&LRITimer, LRI_VALUE, LRITimerISR, context);
		if (URIStart)
			alt_alarm_start(&URITimer, URI_VALUE, URITimerISR, context);
		if (VRPStart)
			alt_alarm_start(&VRPTimer, VRP_VALUE, VRPTimerISR, context);
		if (PVARPStart)
			alt_alarm_start(&PVARPTimer, PVARP_VALUE, PVARPTimerISR, context);

	}
}
